"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

var _fs = require("fs");

var _fs2 = _interopRequireDefault(_fs);

var _querystring = require("querystring");

var _querystring2 = _interopRequireDefault(_querystring);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Channel = function () {
  _createClass(Channel, null, [{
    key: "PATH",
    get: function get() {
      return "/v0.1/messages";
    }
  }]);

  function Channel(credentials, options) {
    _classCallCheck(this, Channel);

    this.creds = credentials;
    this.options = options;

    // Used to facilitate testing of the call to the underlying object
    this._nexmo = this.options.nexmoOverride || _index2.default;

    this._nexmo.initialize(this.creds.apiKey, this.creds.apiSecret, this.options);
  }

  _createClass(Channel, [{
    key: "send",
    value: function send(to, from, message, callback) {
      var params = {
        to: to,
        from: from,
        message: message
      };

      return this.options.api.post(Channel.PATH, params, callback, true, {
        "Content-Type": "application/json"
      });
    }
  }]);

  return Channel;
}();

exports.default = Channel;
module.exports = exports["default"];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9DaGFubmVsLmpzIl0sIm5hbWVzIjpbIkNoYW5uZWwiLCJjcmVkZW50aWFscyIsIm9wdGlvbnMiLCJjcmVkcyIsIl9uZXhtbyIsIm5leG1vT3ZlcnJpZGUiLCJuZXhtbyIsImluaXRpYWxpemUiLCJhcGlLZXkiLCJhcGlTZWNyZXQiLCJ0byIsImZyb20iLCJtZXNzYWdlIiwiY2FsbGJhY2siLCJwYXJhbXMiLCJhcGkiLCJwb3N0IiwiUEFUSCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBRUE7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7OztJQUVNQSxPOzs7d0JBQ2M7QUFDaEIsYUFBTyxnQkFBUDtBQUNEOzs7QUFFRCxtQkFBWUMsV0FBWixFQUF5QkMsT0FBekIsRUFBa0M7QUFBQTs7QUFDaEMsU0FBS0MsS0FBTCxHQUFhRixXQUFiO0FBQ0EsU0FBS0MsT0FBTCxHQUFlQSxPQUFmOztBQUVBO0FBQ0EsU0FBS0UsTUFBTCxHQUFjLEtBQUtGLE9BQUwsQ0FBYUcsYUFBYixJQUE4QkMsZUFBNUM7O0FBRUEsU0FBS0YsTUFBTCxDQUFZRyxVQUFaLENBQ0UsS0FBS0osS0FBTCxDQUFXSyxNQURiLEVBRUUsS0FBS0wsS0FBTCxDQUFXTSxTQUZiLEVBR0UsS0FBS1AsT0FIUDtBQUtEOzs7O3lCQUVJUSxFLEVBQUlDLEksRUFBTUMsTyxFQUFTQyxRLEVBQVU7QUFDaEMsVUFBTUMsU0FBUztBQUNiSixZQUFJQSxFQURTO0FBRWJDLGNBQU1BLElBRk87QUFHYkMsaUJBQVNBO0FBSEksT0FBZjs7QUFNQSxhQUFPLEtBQUtWLE9BQUwsQ0FBYWEsR0FBYixDQUFpQkMsSUFBakIsQ0FBc0JoQixRQUFRaUIsSUFBOUIsRUFBb0NILE1BQXBDLEVBQTRDRCxRQUE1QyxFQUFzRCxJQUF0RCxFQUE0RDtBQUNqRSx3QkFBZ0I7QUFEaUQsT0FBNUQsQ0FBUDtBQUdEOzs7Ozs7a0JBR1liLE8iLCJmaWxlIjoiQ2hhbm5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgbmV4bW8gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBmcyBmcm9tIFwiZnNcIjtcbmltcG9ydCBxdWVyeXN0cmluZyBmcm9tIFwicXVlcnlzdHJpbmdcIjtcblxuY2xhc3MgQ2hhbm5lbCB7XG4gIHN0YXRpYyBnZXQgUEFUSCgpIHtcbiAgICByZXR1cm4gXCIvdjAuMS9tZXNzYWdlc1wiO1xuICB9XG5cbiAgY29uc3RydWN0b3IoY3JlZGVudGlhbHMsIG9wdGlvbnMpIHtcbiAgICB0aGlzLmNyZWRzID0gY3JlZGVudGlhbHM7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcblxuICAgIC8vIFVzZWQgdG8gZmFjaWxpdGF0ZSB0ZXN0aW5nIG9mIHRoZSBjYWxsIHRvIHRoZSB1bmRlcmx5aW5nIG9iamVjdFxuICAgIHRoaXMuX25leG1vID0gdGhpcy5vcHRpb25zLm5leG1vT3ZlcnJpZGUgfHwgbmV4bW87XG5cbiAgICB0aGlzLl9uZXhtby5pbml0aWFsaXplKFxuICAgICAgdGhpcy5jcmVkcy5hcGlLZXksXG4gICAgICB0aGlzLmNyZWRzLmFwaVNlY3JldCxcbiAgICAgIHRoaXMub3B0aW9uc1xuICAgICk7XG4gIH1cblxuICBzZW5kKHRvLCBmcm9tLCBtZXNzYWdlLCBjYWxsYmFjaykge1xuICAgIGNvbnN0IHBhcmFtcyA9IHtcbiAgICAgIHRvOiB0byxcbiAgICAgIGZyb206IGZyb20sXG4gICAgICBtZXNzYWdlOiBtZXNzYWdlXG4gICAgfTtcblxuICAgIHJldHVybiB0aGlzLm9wdGlvbnMuYXBpLnBvc3QoQ2hhbm5lbC5QQVRILCBwYXJhbXMsIGNhbGxiYWNrLCB0cnVlLCB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENoYW5uZWw7XG4iXX0=